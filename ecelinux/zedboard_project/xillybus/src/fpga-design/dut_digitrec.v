// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_digitrec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_st3_fsm_2 = 8'b100;
parameter    ap_ST_st4_fsm_3 = 8'b1000;
parameter    ap_ST_st5_fsm_4 = 8'b10000;
parameter    ap_ST_st6_fsm_5 = 8'b100000;
parameter    ap_ST_st7_fsm_6 = 8'b1000000;
parameter    ap_ST_st8_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv6_32 = 6'b110010;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv11_708 = 11'b11100001000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv15_708 = 15'b11100001000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [48:0] input_V;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_25;
wire   [14:0] training_data_V_address0;
reg    training_data_V_ce0;
wire   [47:0] training_data_V_q0;
wire   [3:0] i_5_fu_169_p2;
reg   [3:0] i_5_reg_271;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_51;
wire   [5:0] tmp_23_fu_187_p2;
reg   [5:0] tmp_23_reg_276;
wire   [0:0] exitcond7_fu_163_p2;
wire   [1:0] k_3_fu_199_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_66;
wire   [10:0] i_6_fu_225_p2;
reg   [10:0] i_6_reg_292;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_75;
wire   [14:0] tmp_cast_19_fu_231_p1;
reg   [14:0] tmp_cast_19_reg_297;
wire   [0:0] exitcond8_fu_219_p2;
wire   [3:0] j_2_fu_241_p2;
reg   [3:0] j_2_reg_305;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_89;
wire   [14:0] next_mul_fu_247_p2;
reg   [14:0] next_mul_reg_310;
wire   [0:0] exitcond_fu_235_p2;
reg   [47:0] training_instance_V_reg_320;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_104;
reg   [4:0] knn_set_V_address0;
reg    knn_set_V_ce0;
reg    knn_set_V_we0;
reg   [5:0] knn_set_V_d0;
wire   [5:0] knn_set_V_q0;
wire    grp_dut_knn_vote_fu_148_ap_start;
wire    grp_dut_knn_vote_fu_148_ap_done;
wire    grp_dut_knn_vote_fu_148_ap_idle;
wire    grp_dut_knn_vote_fu_148_ap_ready;
wire   [4:0] grp_dut_knn_vote_fu_148_knn_set_V_address0;
wire    grp_dut_knn_vote_fu_148_knn_set_V_ce0;
wire   [3:0] grp_dut_knn_vote_fu_148_ap_return;
wire    grp_dut_update_knn_fu_153_ap_start;
wire    grp_dut_update_knn_fu_153_ap_done;
wire    grp_dut_update_knn_fu_153_ap_idle;
wire    grp_dut_update_knn_fu_153_ap_ready;
wire   [4:0] grp_dut_update_knn_fu_153_min_distances_V_address0;
wire    grp_dut_update_knn_fu_153_min_distances_V_ce0;
wire    grp_dut_update_knn_fu_153_min_distances_V_we0;
wire   [5:0] grp_dut_update_knn_fu_153_min_distances_V_d0;
reg   [3:0] i_reg_92;
wire   [0:0] exitcond9_fu_193_p2;
reg   [1:0] k_reg_103;
reg   [10:0] i4_reg_114;
reg   [3:0] j_reg_125;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_165;
reg   [14:0] phi_mul_reg_137;
reg    ap_reg_grp_dut_knn_vote_fu_148_ap_start;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_182;
reg    ap_reg_grp_dut_update_knn_fu_153_ap_start;
wire  signed [63:0] tmp_32_cast_fu_214_p1;
wire   [63:0] tmp_34_cast_fu_258_p1;
wire   [5:0] tmp_s_fu_179_p3;
wire   [5:0] tmp_cast_fu_175_p1;
wire   [5:0] tmp_28_cast_fu_205_p1;
wire   [5:0] tmp_25_fu_209_p2;
wire   [14:0] tmp_26_fu_253_p2;
reg   [3:0] ap_return_preg;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'b1;
#0 ap_reg_grp_dut_knn_vote_fu_148_ap_start = 1'b0;
#0 ap_reg_grp_dut_update_knn_fu_153_ap_start = 1'b0;
#0 ap_return_preg = 4'b0000;
end

dut_digitrec_training_data_V #(
    .DataWidth( 48 ),
    .AddressRange( 18000 ),
    .AddressWidth( 15 ))
training_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_address0),
    .ce0(training_data_V_ce0),
    .q0(training_data_V_q0)
);

dut_digitrec_knn_set_V #(
    .DataWidth( 6 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
knn_set_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(knn_set_V_address0),
    .ce0(knn_set_V_ce0),
    .we0(knn_set_V_we0),
    .d0(knn_set_V_d0),
    .q0(knn_set_V_q0)
);

dut_knn_vote grp_dut_knn_vote_fu_148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_knn_vote_fu_148_ap_start),
    .ap_done(grp_dut_knn_vote_fu_148_ap_done),
    .ap_idle(grp_dut_knn_vote_fu_148_ap_idle),
    .ap_ready(grp_dut_knn_vote_fu_148_ap_ready),
    .knn_set_V_address0(grp_dut_knn_vote_fu_148_knn_set_V_address0),
    .knn_set_V_ce0(grp_dut_knn_vote_fu_148_knn_set_V_ce0),
    .knn_set_V_q0(knn_set_V_q0),
    .ap_return(grp_dut_knn_vote_fu_148_ap_return)
);

dut_update_knn grp_dut_update_knn_fu_153(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_update_knn_fu_153_ap_start),
    .ap_done(grp_dut_update_knn_fu_153_ap_done),
    .ap_idle(grp_dut_update_knn_fu_153_ap_idle),
    .ap_ready(grp_dut_update_knn_fu_153_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(training_instance_V_reg_320),
    .min_distances_V_address0(grp_dut_update_knn_fu_153_min_distances_V_address0),
    .min_distances_V_ce0(grp_dut_update_knn_fu_153_min_distances_V_ce0),
    .min_distances_V_we0(grp_dut_update_knn_fu_153_min_distances_V_we0),
    .min_distances_V_d0(grp_dut_update_knn_fu_153_min_distances_V_d0),
    .min_distances_V_q0(knn_set_V_q0),
    .tmp_34(j_reg_125)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_knn_vote_fu_148_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_fu_219_p2))) begin
            ap_reg_grp_dut_knn_vote_fu_148_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_knn_vote_fu_148_ap_ready)) begin
            ap_reg_grp_dut_knn_vote_fu_148_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_update_knn_fu_153_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            ap_reg_grp_dut_update_knn_fu_153_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_update_knn_fu_153_ap_ready)) begin
            ap_reg_grp_dut_update_knn_fu_153_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv4_0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_dut_knn_vote_fu_148_ap_done))) begin
            ap_return_preg <= grp_dut_knn_vote_fu_148_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond7_fu_163_p2 == 1'b0))) begin
        i4_reg_114 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond_fu_235_p2))) begin
        i4_reg_114 <= i_6_reg_292;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_193_p2))) begin
        i_reg_92 <= i_5_reg_271;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_92 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_dut_update_knn_fu_153_ap_done))) begin
        j_reg_125 <= j_2_reg_305;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_219_p2))) begin
        j_reg_125 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_163_p2 == 1'b0))) begin
        k_reg_103 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_193_p2))) begin
        k_reg_103 <= k_3_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_dut_update_knn_fu_153_ap_done))) begin
        phi_mul_reg_137 <= next_mul_reg_310;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_219_p2))) begin
        phi_mul_reg_137 <= ap_const_lv15_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_5_reg_271 <= i_5_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_6_reg_292 <= i_6_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_2_reg_305 <= j_2_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond_fu_235_p2))) begin
        next_mul_reg_310 <= next_mul_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_163_p2 == 1'b0))) begin
        tmp_23_reg_276 <= tmp_23_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_219_p2))) begin
        tmp_cast_19_reg_297[10 : 0] <= tmp_cast_19_fu_231_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        training_instance_V_reg_320 <= training_data_V_q0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_dut_knn_vote_fu_148_ap_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_dut_knn_vote_fu_148_ap_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_dut_knn_vote_fu_148_ap_done))) begin
        ap_return = grp_dut_knn_vote_fu_148_ap_return;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_51) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_66) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_75) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_104) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_165) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_182) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        knn_set_V_address0 = tmp_32_cast_fu_214_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        knn_set_V_address0 = grp_dut_update_knn_fu_153_min_distances_V_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        knn_set_V_address0 = grp_dut_knn_vote_fu_148_knn_set_V_address0;
    end else begin
        knn_set_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        knn_set_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        knn_set_V_ce0 = grp_dut_update_knn_fu_153_min_distances_V_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        knn_set_V_ce0 = grp_dut_knn_vote_fu_148_knn_set_V_ce0;
    end else begin
        knn_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        knn_set_V_d0 = ap_const_lv6_32;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        knn_set_V_d0 = grp_dut_update_knn_fu_153_min_distances_V_d0;
    end else begin
        knn_set_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_193_p2))) begin
        knn_set_V_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        knn_set_V_we0 = grp_dut_update_knn_fu_153_min_distances_V_we0;
    end else begin
        knn_set_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        training_data_V_ce0 = 1'b1;
    end else begin
        training_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((exitcond7_fu_163_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == exitcond9_fu_193_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond8_fu_219_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond_fu_235_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == grp_dut_update_knn_fu_153_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : begin
            if (~(1'b0 == grp_dut_knn_vote_fu_148_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_104 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_165 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_182 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_25 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_51 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_66 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_75 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

assign exitcond7_fu_163_p2 = ((i_reg_92 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond8_fu_219_p2 = ((i4_reg_114 == ap_const_lv11_708) ? 1'b1 : 1'b0);

assign exitcond9_fu_193_p2 = ((k_reg_103 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_fu_235_p2 = ((j_reg_125 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign grp_dut_knn_vote_fu_148_ap_start = ap_reg_grp_dut_knn_vote_fu_148_ap_start;

assign grp_dut_update_knn_fu_153_ap_start = ap_reg_grp_dut_update_knn_fu_153_ap_start;

assign i_5_fu_169_p2 = (i_reg_92 + ap_const_lv4_1);

assign i_6_fu_225_p2 = (i4_reg_114 + ap_const_lv11_1);

assign j_2_fu_241_p2 = (j_reg_125 + ap_const_lv4_1);

assign k_3_fu_199_p2 = (k_reg_103 + ap_const_lv2_1);

assign next_mul_fu_247_p2 = (phi_mul_reg_137 + ap_const_lv15_708);

assign tmp_23_fu_187_p2 = (tmp_s_fu_179_p3 - tmp_cast_fu_175_p1);

assign tmp_25_fu_209_p2 = (tmp_23_reg_276 + tmp_28_cast_fu_205_p1);

assign tmp_26_fu_253_p2 = (phi_mul_reg_137 + tmp_cast_19_reg_297);

assign tmp_28_cast_fu_205_p1 = k_reg_103;

assign tmp_32_cast_fu_214_p1 = $signed(tmp_25_fu_209_p2);

assign tmp_34_cast_fu_258_p1 = tmp_26_fu_253_p2;

assign tmp_cast_19_fu_231_p1 = i4_reg_114;

assign tmp_cast_fu_175_p1 = i_reg_92;

assign tmp_s_fu_179_p3 = {{i_reg_92}, {ap_const_lv2_0}};

assign training_data_V_address0 = tmp_34_cast_fu_258_p1;

always @ (posedge ap_clk) begin
    tmp_cast_19_reg_297[14:11] <= 4'b0000;
end

endmodule //dut_digitrec
