-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_knn_vote is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    knn_set_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    knn_set_V_ce0 : OUT STD_LOGIC;
    knn_set_V_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of dut_knn_vote is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_28 : BOOLEAN;
    signal k_1_fu_308_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_47 : BOOLEAN;
    signal i_3_fu_402_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_966 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_56 : BOOLEAN;
    signal tmp_8_fu_420_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_reg_971 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond2_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_432_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_979 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_71 : BOOLEAN;
    signal knn_set_V_addr_reg_984 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond4_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_2_fu_458_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_2_reg_992 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_85 : BOOLEAN;
    signal i_fu_708_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_94 : BOOLEAN;
    signal i_4_fu_725_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_4_reg_1008 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_103 : BOOLEAN;
    signal votes_V_addr_1_reg_1013 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond5_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_voter_V_s_fu_770_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_voter_V_s_reg_1018 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_1_14_fu_778_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_1_14_reg_1023 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_cast_fu_786_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_15_cast_reg_1028 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_125 : BOOLEAN;
    signal exitcond_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_2_fu_868_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_141 : BOOLEAN;
    signal result_V_4_fu_884_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_fu_892_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal votes_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal votes_V_ce0 : STD_LOGIC;
    signal votes_V_we0 : STD_LOGIC;
    signal votes_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal votes_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal votes_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal votes_V_ce1 : STD_LOGIC;
    signal votes_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_reg_149 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond1_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal voters_1_V_reg_160 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_172 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond6_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k2_reg_183 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_189 : BOOLEAN;
    signal i4_reg_195 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond3_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_reg_206 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_205 : BOOLEAN;
    signal p_1_reg_217 : STD_LOGIC_VECTOR (5 downto 0);
    signal i5_reg_228 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_V_reg_239 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_V_load_reg_251 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_V_reg_263 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_cast_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_743_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal min_distances_0_V_fu_62 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_0_V_1_fu_358_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_1_V_fu_66 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_1_V_1_fu_350_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_fu_70 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_1_fu_334_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_3_fu_78 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_13_fu_664_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_4_fu_82 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_12_fu_656_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_2_fu_86 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_6_fu_648_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal voters_2_V_1_fu_90 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_12_fu_640_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_2_fu_94 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_9_fu_632_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_7_fu_98 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_4_fu_624_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_790_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_320_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp9_fu_342_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_412_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_cast_fu_408_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_cast_fu_438_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_442_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_464_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal cond_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_distances_V_load_phi_fu_488_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ult_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal voters_2_V_fu_526_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_5_fu_542_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_distances_2_V_8_fu_566_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_9_fu_582_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal voters_2_V_3_fu_534_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_6_fu_550_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal voters_2_V_8_fu_558_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_distances_2_V_5_fu_574_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_7_fu_590_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal min_distances_2_V_11_fu_598_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_731_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal min_dist_V_fu_748_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min_voter_V_fu_766_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_30_cast_fu_813_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_agg_result_V_fu_834_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_V_1_fu_848_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_2_agg_result_V_load_fu_841_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_V_3_fu_876_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);

    component dut_mux_3to1_sel2_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        din3 : IN STD_LOGIC_VECTOR (5 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dut_mux_3to1_sel2_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        din3 : IN STD_LOGIC_VECTOR (3 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dut_knn_vote_votes_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    votes_V_U : component dut_knn_vote_votes_V
    generic map (
        DataWidth => 4,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => votes_V_address0,
        ce0 => votes_V_ce0,
        we0 => votes_V_we0,
        d0 => votes_V_d0,
        q0 => votes_V_q0,
        address1 => votes_V_address1,
        ce1 => votes_V_ce1,
        q1 => votes_V_q1);

    dut_mux_3to1_sel2_6_1_U5 : component dut_mux_3to1_sel2_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        din3_WIDTH => 6,
        din4_WIDTH => 2,
        dout_WIDTH => 6)
    port map (
        din1 => min_distances_2_V_3_fu_78,
        din2 => min_distances_2_V_4_fu_82,
        din3 => min_distances_2_V_2_fu_86,
        din4 => k2_reg_183,
        dout => tmp_3_fu_464_p5);

    dut_mux_3to1_sel2_4_1_U6 : component dut_mux_3to1_sel2_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 4,
        din2_WIDTH => 4,
        din3_WIDTH => 4,
        din4_WIDTH => 2,
        dout_WIDTH => 4)
    port map (
        din1 => voters_2_V_1_fu_90,
        din2 => voters_2_V_2_fu_94,
        din3 => voters_2_V_7_fu_98,
        din4 => i5_reg_228,
        dout => tmp_1_fu_731_p5);

    dut_mux_3to1_sel2_6_1_U7 : component dut_mux_3to1_sel2_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        din3_WIDTH => 6,
        din4_WIDTH => 2,
        dout_WIDTH => 6)
    port map (
        din1 => min_distances_2_V_3_fu_78,
        din2 => min_distances_2_V_4_fu_82,
        din3 => min_distances_2_V_2_fu_86,
        din4 => i5_reg_228,
        dout => min_dist_V_fu_748_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = exitcond_fu_797_p2)))) then 
                    ap_return_preg <= agg_result_V_reg_239;
                end if; 
            end if;
        end if;
    end process;


    agg_result_V_load_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                agg_result_V_load_reg_251 <= result_V_4_fu_884_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond5_fu_719_p2)))) then 
                agg_result_V_load_reg_251 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    agg_result_V_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                agg_result_V_reg_239 <= result_V_2_fu_868_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond5_fu_719_p2)))) then 
                agg_result_V_reg_239 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i4_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((exitcond2_fu_396_p2 = ap_const_lv1_0)))) then 
                i4_reg_195 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond3_fu_702_p2))) then 
                i4_reg_195 <= i_fu_708_p2;
            end if; 
        end if;
    end process;

    i5_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_702_p2)))) then 
                i5_reg_228 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                i5_reg_228 <= i_4_reg_1008;
            end if; 
        end if;
    end process;

    j_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond6_fu_452_p2)))) then 
                j_reg_172 <= j_1_reg_979;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond2_fu_396_p2 = ap_const_lv1_0))) then 
                j_reg_172 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k2_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                k2_reg_183 <= k_2_reg_992;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond4_fu_426_p2))) then 
                k2_reg_183 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_302_p2))) then 
                k_reg_149 <= k_1_fu_308_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                k_reg_149 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    min_distances_2_V_2_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                min_distances_2_V_2_fu_86 <= min_distances_2_V_6_fu_648_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_302_p2)))) then 
                min_distances_2_V_2_fu_86 <= min_distances_2_V_fu_70;
            end if; 
        end if;
    end process;

    min_distances_2_V_3_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                min_distances_2_V_3_fu_78 <= min_distances_2_V_13_fu_664_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_302_p2)))) then 
                min_distances_2_V_3_fu_78 <= min_distances_0_V_fu_62;
            end if; 
        end if;
    end process;

    min_distances_2_V_4_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                min_distances_2_V_4_fu_82 <= min_distances_2_V_12_fu_656_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_302_p2)))) then 
                min_distances_2_V_4_fu_82 <= min_distances_1_V_fu_66;
            end if; 
        end if;
    end process;

    p_1_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_702_p2)))) then 
                p_1_reg_217 <= ap_const_lv6_32;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                p_1_reg_217 <= p_1_14_reg_1023;
            end if; 
        end if;
    end process;

    p_s_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond3_fu_702_p2)))) then 
                p_s_reg_206 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                p_s_reg_206 <= min_voter_V_s_reg_1018;
            end if; 
        end if;
    end process;

    result_V_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                result_V_reg_263 <= i_V_fu_892_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond5_fu_719_p2)))) then 
                result_V_reg_263 <= ap_const_lv4_1;
            end if; 
        end if;
    end process;

    voters_1_V_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_302_p2)))) then 
                voters_1_V_reg_160 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_426_p2)))) then 
                voters_1_V_reg_160 <= i_3_reg_966;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_3_reg_966 <= i_3_fu_402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                i_4_reg_1008 <= i_4_fu_725_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                j_1_reg_979 <= j_1_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                k_2_reg_992 <= k_2_fu_458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond4_fu_426_p2))) then
                knn_set_V_addr_reg_984 <= tmp_29_cast_fu_447_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_302_p2))) then
                min_distances_0_V_fu_62 <= min_distances_0_V_1_fu_358_p3;
                min_distances_1_V_fu_66 <= min_distances_1_V_1_fu_350_p3;
                min_distances_2_V_fu_70 <= min_distances_2_V_1_fu_334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond5_fu_719_p2))) then
                min_voter_V_s_reg_1018 <= min_voter_V_s_fu_770_p3;
                p_1_14_reg_1023 <= p_1_14_fu_778_p3;
                votes_V_addr_1_reg_1013 <= tmp_10_fu_743_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond5_fu_719_p2)))) then
                    tmp_15_cast_reg_1028(5 downto 0) <= tmp_15_cast_fu_786_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = exitcond_fu_797_p2))) then
                tmp_22_reg_1046 <= tmp_22_fu_817_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond2_fu_396_p2 = ap_const_lv1_0))) then
                tmp_8_reg_971 <= tmp_8_fu_420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                voters_2_V_1_fu_90 <= voters_2_V_12_fu_640_p3;
                voters_2_V_2_fu_94 <= voters_2_V_9_fu_632_p3;
                voters_2_V_7_fu_98 <= voters_2_V_4_fu_624_p3;
            end if;
        end if;
    end process;
    tmp_15_cast_reg_1028(6) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond2_fu_396_p2, exitcond4_fu_426_p2, exitcond5_fu_719_p2, exitcond_fu_797_p2, exitcond1_fu_302_p2, exitcond6_fu_452_p2, exitcond3_fu_702_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_302_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((exitcond2_fu_396_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_426_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond6_fu_452_p2))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = exitcond3_fu_702_p2)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = exitcond5_fu_719_p2))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_lv1_0 = exitcond_fu_797_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st10_fsm_9, exitcond_fu_797_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = exitcond_fu_797_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, exitcond_fu_797_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = exitcond_fu_797_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, exitcond_fu_797_p2, agg_result_V_reg_239, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = exitcond_fu_797_p2)))) then 
            ap_return <= agg_result_V_reg_239;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_103_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_103 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_125_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_125 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_141_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_141 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_189_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_189 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_205_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_205 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_28_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_28 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_47_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_47 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_56_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_56 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_71_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_71 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_85_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_85 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_94_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_94 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_125)
    begin
        if (ap_sig_125) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_141)
    begin
        if (ap_sig_141) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_28)
    begin
        if (ap_sig_28) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_47)
    begin
        if (ap_sig_47) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_56)
    begin
        if (ap_sig_56) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_71)
    begin
        if (ap_sig_71) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_85)
    begin
        if (ap_sig_85) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_189)
    begin
        if (ap_sig_189) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_94)
    begin
        if (ap_sig_94) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_103)
    begin
        if (ap_sig_103) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_205)
    begin
        if (ap_sig_205) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_482_p2 <= "1" when (k2_reg_183 = ap_const_lv2_0) else "0";
    exitcond1_fu_302_p2 <= "1" when (k_reg_149 = ap_const_lv2_3) else "0";
    exitcond2_fu_396_p2 <= "1" when (voters_1_V_reg_160 = ap_const_lv4_A) else "0";
    exitcond3_fu_702_p2 <= "1" when (i4_reg_195 = ap_const_lv4_A) else "0";
    exitcond4_fu_426_p2 <= "1" when (j_reg_172 = ap_const_lv2_3) else "0";
    exitcond5_fu_719_p2 <= "1" when (i5_reg_228 = ap_const_lv2_3) else "0";
    exitcond6_fu_452_p2 <= "1" when (k2_reg_183 = ap_const_lv2_3) else "0";
    exitcond_fu_797_p2 <= "1" when (result_V_reg_263 = ap_const_lv4_A) else "0";
    i_3_fu_402_p2 <= std_logic_vector(unsigned(voters_1_V_reg_160) + unsigned(ap_const_lv4_1));
    i_4_fu_725_p2 <= std_logic_vector(unsigned(i5_reg_228) + unsigned(ap_const_lv2_1));
    i_V_fu_892_p2 <= std_logic_vector(unsigned(result_V_reg_263) + unsigned(ap_const_lv4_1));
    i_fu_708_p2 <= std_logic_vector(unsigned(i4_reg_195) + unsigned(ap_const_lv4_1));
    j_1_fu_432_p2 <= std_logic_vector(unsigned(j_reg_172) + unsigned(ap_const_lv2_1));
    k_1_fu_308_p2 <= std_logic_vector(unsigned(k_reg_149) + unsigned(ap_const_lv2_1));
    k_2_fu_458_p2 <= std_logic_vector(unsigned(k2_reg_183) + unsigned(ap_const_lv2_1));
    knn_set_V_address0 <= knn_set_V_addr_reg_984;

    knn_set_V_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            knn_set_V_ce0 <= ap_const_logic_1;
        else 
            knn_set_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    min_distances_0_V_1_fu_358_p3 <= 
        ap_const_lv6_32 when (sel_tmp6_fu_328_p2(0) = '1') else 
        min_distances_0_V_fu_62;
    min_distances_1_V_1_fu_350_p3 <= 
        min_distances_1_V_fu_66 when (sel_tmp6_fu_328_p2(0) = '1') else 
        sel_tmp9_fu_342_p3;
    min_distances_2_V_11_fu_598_p3 <= 
        knn_set_V_q0 when (cond_fu_482_p2(0) = '1') else 
        min_distances_2_V_3_fu_78;
    min_distances_2_V_12_fu_656_p3 <= 
        min_distances_2_V_7_fu_590_p3 when (sel_tmp8_fu_618_p2(0) = '1') else 
        min_distances_2_V_4_fu_82;
    min_distances_2_V_13_fu_664_p3 <= 
        min_distances_2_V_11_fu_598_p3 when (sel_tmp8_fu_618_p2(0) = '1') else 
        min_distances_2_V_3_fu_78;
    min_distances_2_V_1_fu_334_p3 <= 
        min_distances_2_V_fu_70 when (sel_tmp6_fu_328_p2(0) = '1') else 
        sel_tmp5_fu_320_p3;
    min_distances_2_V_5_fu_574_p3 <= 
        min_distances_2_V_2_fu_86 when (cond_fu_482_p2(0) = '1') else 
        min_distances_2_V_8_fu_566_p3;
    min_distances_2_V_6_fu_648_p3 <= 
        min_distances_2_V_5_fu_574_p3 when (sel_tmp8_fu_618_p2(0) = '1') else 
        min_distances_2_V_2_fu_86;
    min_distances_2_V_7_fu_590_p3 <= 
        min_distances_2_V_4_fu_82 when (cond_fu_482_p2(0) = '1') else 
        min_distances_2_V_9_fu_582_p3;
    min_distances_2_V_8_fu_566_p3 <= 
        min_distances_2_V_2_fu_86 when (sel_tmp1_fu_520_p2(0) = '1') else 
        knn_set_V_q0;
    min_distances_2_V_9_fu_582_p3 <= 
        knn_set_V_q0 when (sel_tmp1_fu_520_p2(0) = '1') else 
        min_distances_2_V_4_fu_82;
    min_distances_V_load_phi_fu_488_p3 <= 
        min_distances_2_V_4_fu_82 when (cond_fu_482_p2(0) = '1') else 
        min_distances_2_V_2_fu_86;
    min_voter_V_fu_766_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_731_p5),6));
    min_voter_V_s_fu_770_p3 <= 
        min_voter_V_fu_766_p1 when (tmp_12_fu_760_p2(0) = '1') else 
        p_s_reg_206;
    or_cond_fu_612_p2 <= (tmp_fu_606_p2 or rev_fu_502_p2);
    p_1_14_fu_778_p3 <= 
        min_dist_V_fu_748_p5 when (tmp_12_fu_760_p2(0) = '1') else 
        p_1_reg_217;
    p_2_agg_result_V_fu_834_p3 <= 
        result_V_reg_263 when (tmp_22_reg_1046(0) = '1') else 
        agg_result_V_reg_239;
    p_2_agg_result_V_load_fu_841_p3 <= 
        result_V_reg_263 when (tmp_22_reg_1046(0) = '1') else 
        agg_result_V_load_reg_251;
    result_V_1_fu_848_p3 <= 
        result_V_reg_263 when (tmp_17_fu_822_p2(0) = '1') else 
        agg_result_V_reg_239;
    result_V_2_fu_868_p3 <= 
        p_2_agg_result_V_fu_834_p3 when (sel_tmp3_fu_862_p2(0) = '1') else 
        result_V_1_fu_848_p3;
    result_V_3_fu_876_p3 <= 
        result_V_reg_263 when (tmp_17_fu_822_p2(0) = '1') else 
        agg_result_V_load_reg_251;
    result_V_4_fu_884_p3 <= 
        p_2_agg_result_V_load_fu_841_p3 when (sel_tmp3_fu_862_p2(0) = '1') else 
        result_V_3_fu_876_p3;
    rev_fu_502_p2 <= (ult_fu_496_p2 xor ap_const_lv1_1);
    sel_tmp1_fu_520_p2 <= "1" when (k2_reg_183 = ap_const_lv2_1) else "0";
    sel_tmp2_fu_856_p2 <= (tmp_17_fu_822_p2 xor ap_const_lv1_1);
    sel_tmp3_fu_862_p2 <= (tmp_19_fu_828_p2 and sel_tmp2_fu_856_p2);
    sel_tmp5_fu_320_p3 <= 
        min_distances_2_V_fu_70 when (sel_tmp_fu_314_p2(0) = '1') else 
        ap_const_lv6_32;
    sel_tmp6_fu_328_p2 <= "1" when (k_reg_149 = ap_const_lv2_0) else "0";
    sel_tmp8_fu_618_p2 <= (tmp_18_fu_476_p2 and or_cond_fu_612_p2);
    sel_tmp9_fu_342_p3 <= 
        ap_const_lv6_32 when (sel_tmp_fu_314_p2(0) = '1') else 
        min_distances_1_V_fu_66;
    sel_tmp_fu_314_p2 <= "1" when (k_reg_149 = ap_const_lv2_1) else "0";
    tmp_10_fu_743_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_731_p5),64));
    tmp_11_fu_790_p2 <= std_logic_vector(unsigned(votes_V_q0) + unsigned(ap_const_lv4_1));
    tmp_12_fu_760_p2 <= "1" when (unsigned(min_dist_V_fu_748_p5) < unsigned(p_1_reg_217)) else "0";
    tmp_14_cast_fu_438_p1 <= std_logic_vector(resize(unsigned(j_reg_172),6));
    tmp_14_fu_442_p2 <= std_logic_vector(unsigned(tmp_8_reg_971) + unsigned(tmp_14_cast_fu_438_p1));
    tmp_15_cast_fu_786_p1 <= std_logic_vector(resize(unsigned(p_s_reg_206),7));
    tmp_15_fu_803_p1 <= std_logic_vector(resize(unsigned(result_V_reg_263),64));
    tmp_16_fu_808_p1 <= std_logic_vector(resize(unsigned(agg_result_V_load_reg_251),64));
    tmp_17_fu_822_p2 <= "1" when (unsigned(votes_V_q0) > unsigned(votes_V_q1)) else "0";
    tmp_18_fu_476_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(tmp_3_fu_464_p5)) else "0";
    tmp_19_fu_828_p2 <= "1" when (votes_V_q0 = votes_V_q1) else "0";
    tmp_20_fu_508_p2 <= "1" when (tmp_3_fu_464_p5 = ap_const_lv6_32) else "0";
    tmp_21_fu_514_p2 <= "1" when (k2_reg_183 = ap_const_lv2_2) else "0";
    tmp_22_fu_817_p2 <= "1" when (tmp_30_cast_fu_813_p1 = tmp_15_cast_reg_1028) else "0";
        tmp_29_cast_fu_447_p1 <= std_logic_vector(resize(signed(tmp_14_fu_442_p2),64));

    tmp_30_cast_fu_813_p1 <= std_logic_vector(resize(unsigned(result_V_reg_263),7));
    tmp_7_fu_412_p3 <= (voters_1_V_reg_160 & ap_const_lv2_0);
    tmp_8_fu_420_p2 <= std_logic_vector(unsigned(tmp_7_fu_412_p3) - unsigned(tmp_cast_fu_408_p1));
    tmp_9_fu_714_p1 <= std_logic_vector(resize(unsigned(i4_reg_195),64));
    tmp_cast_fu_408_p1 <= std_logic_vector(resize(unsigned(voters_1_V_reg_160),6));
    tmp_fu_606_p2 <= (tmp_20_fu_508_p2 or tmp_21_fu_514_p2);
    ult_fu_496_p2 <= "1" when (unsigned(knn_set_V_q0) < unsigned(min_distances_V_load_phi_fu_488_p3)) else "0";
    voters_2_V_12_fu_640_p3 <= 
        voters_2_V_8_fu_558_p3 when (sel_tmp8_fu_618_p2(0) = '1') else 
        voters_2_V_1_fu_90;
    voters_2_V_3_fu_534_p3 <= 
        voters_2_V_7_fu_98 when (cond_fu_482_p2(0) = '1') else 
        voters_2_V_fu_526_p3;
    voters_2_V_4_fu_624_p3 <= 
        voters_2_V_3_fu_534_p3 when (sel_tmp8_fu_618_p2(0) = '1') else 
        voters_2_V_7_fu_98;
    voters_2_V_5_fu_542_p3 <= 
        voters_1_V_reg_160 when (sel_tmp1_fu_520_p2(0) = '1') else 
        voters_2_V_2_fu_94;
    voters_2_V_6_fu_550_p3 <= 
        voters_2_V_2_fu_94 when (cond_fu_482_p2(0) = '1') else 
        voters_2_V_5_fu_542_p3;
    voters_2_V_8_fu_558_p3 <= 
        voters_1_V_reg_160 when (cond_fu_482_p2(0) = '1') else 
        voters_2_V_1_fu_90;
    voters_2_V_9_fu_632_p3 <= 
        voters_2_V_6_fu_550_p3 when (sel_tmp8_fu_618_p2(0) = '1') else 
        voters_2_V_2_fu_94;
    voters_2_V_fu_526_p3 <= 
        voters_2_V_7_fu_98 when (sel_tmp1_fu_520_p2(0) = '1') else 
        voters_1_V_reg_160;

    votes_V_address0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, votes_V_addr_1_reg_1013, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st9_fsm_8, tmp_9_fu_714_p1, tmp_10_fu_743_p1, tmp_15_fu_803_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            votes_V_address0 <= votes_V_addr_1_reg_1013;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            votes_V_address0 <= tmp_9_fu_714_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            votes_V_address0 <= tmp_15_fu_803_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            votes_V_address0 <= tmp_10_fu_743_p1(4 - 1 downto 0);
        else 
            votes_V_address0 <= "XXXX";
        end if; 
    end process;

    votes_V_address1 <= tmp_16_fu_808_p1(4 - 1 downto 0);

    votes_V_ce0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            votes_V_ce0 <= ap_const_logic_1;
        else 
            votes_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    votes_V_ce1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            votes_V_ce1 <= ap_const_logic_1;
        else 
            votes_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    votes_V_d0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st9_fsm_8, tmp_11_fu_790_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            votes_V_d0 <= tmp_11_fu_790_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            votes_V_d0 <= ap_const_lv4_0;
        else 
            votes_V_d0 <= "XXXX";
        end if; 
    end process;


    votes_V_we0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, exitcond3_fu_702_p2, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond3_fu_702_p2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            votes_V_we0 <= ap_const_logic_1;
        else 
            votes_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
