// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_update_knn_HH_
#define _dut_update_knn_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dut_update_knn : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<49> > test_inst_V;
    sc_in< sc_lv<48> > train_inst_V;
    sc_out< sc_lv<5> > min_distances_V_address0;
    sc_out< sc_logic > min_distances_V_ce0;
    sc_out< sc_logic > min_distances_V_we0;
    sc_out< sc_lv<6> > min_distances_V_d0;
    sc_in< sc_lv<6> > min_distances_V_q0;
    sc_in< sc_lv<4> > tmp_34;


    // Module declarations
    dut_update_knn(sc_module_name name);
    SC_HAS_PROCESS(dut_update_knn);

    ~dut_update_knn();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_22;
    sc_signal< sc_lv<6> > tmp_s_fu_152_p2;
    sc_signal< sc_lv<6> > tmp_s_reg_298;
    sc_signal< sc_lv<49> > r_V_2_fu_162_p2;
    sc_signal< sc_lv<6> > i_1_fu_174_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_52;
    sc_signal< sc_lv<32> > dist_0_s_fu_190_p3;
    sc_signal< sc_lv<1> > exitcond_fu_168_p2;
    sc_signal< sc_lv<49> > r_V_4_fu_208_p1;
    sc_signal< sc_lv<1> > tmp_5_fu_212_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_327;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_69;
    sc_signal< sc_lv<2> > i_2_fu_218_p2;
    sc_signal< sc_lv<2> > i_2_reg_331;
    sc_signal< sc_lv<5> > min_distances_V_addr_reg_337;
    sc_signal< sc_lv<1> > tmp_8_fu_242_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_342;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_84;
    sc_signal< sc_lv<1> > tmp_4_fu_261_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_352;
    sc_signal< sc_lv<49> > p_s_reg_96;
    sc_signal< sc_lv<32> > val_assign_reg_105;
    sc_signal< sc_lv<6> > i_reg_117;
    sc_signal< sc_lv<2> > i1_reg_128;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_107;
    sc_signal< sc_lv<1> > or_cond_fu_288_p2;
    sc_signal< sc_lv<1> > demorgan_fu_277_p2;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_233_p1;
    sc_signal< sc_lv<64> > tmp_14_cast_fu_256_p1;
    sc_signal< sc_lv<6> > tmp_fu_144_p3;
    sc_signal< sc_lv<6> > tmp_34_cast_cast_fu_140_p1;
    sc_signal< sc_lv<49> > train_inst_V_cast_fu_158_p1;
    sc_signal< sc_lv<1> > r_V_fu_180_p1;
    sc_signal< sc_lv<32> > dist_fu_184_p2;
    sc_signal< sc_lv<48> > r_V_3_fu_198_p4;
    sc_signal< sc_lv<6> > tmp_6_cast_fu_224_p1;
    sc_signal< sc_lv<6> > tmp_3_fu_228_p2;
    sc_signal< sc_lv<32> > tmp_7_fu_238_p1;
    sc_signal< sc_lv<6> > tmp_cast_fu_248_p1;
    sc_signal< sc_lv<6> > tmp_6_fu_251_p2;
    sc_signal< sc_lv<32> > tmp_2_fu_267_p1;
    sc_signal< sc_lv<1> > slt_fu_271_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_282_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<2> ap_const_lv2_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_107();
    void thread_ap_sig_22();
    void thread_ap_sig_52();
    void thread_ap_sig_69();
    void thread_ap_sig_84();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_demorgan_fu_277_p2();
    void thread_dist_0_s_fu_190_p3();
    void thread_dist_fu_184_p2();
    void thread_exitcond_fu_168_p2();
    void thread_i_1_fu_174_p2();
    void thread_i_2_fu_218_p2();
    void thread_min_distances_V_address0();
    void thread_min_distances_V_ce0();
    void thread_min_distances_V_d0();
    void thread_min_distances_V_we0();
    void thread_or_cond_fu_288_p2();
    void thread_r_V_2_fu_162_p2();
    void thread_r_V_3_fu_198_p4();
    void thread_r_V_4_fu_208_p1();
    void thread_r_V_fu_180_p1();
    void thread_slt_fu_271_p2();
    void thread_tmp_13_cast_fu_233_p1();
    void thread_tmp_14_cast_fu_256_p1();
    void thread_tmp_1_fu_282_p2();
    void thread_tmp_2_fu_267_p1();
    void thread_tmp_34_cast_cast_fu_140_p1();
    void thread_tmp_3_fu_228_p2();
    void thread_tmp_4_fu_261_p2();
    void thread_tmp_5_fu_212_p2();
    void thread_tmp_6_cast_fu_224_p1();
    void thread_tmp_6_fu_251_p2();
    void thread_tmp_7_fu_238_p1();
    void thread_tmp_8_fu_242_p2();
    void thread_tmp_cast_fu_248_p1();
    void thread_tmp_fu_144_p3();
    void thread_tmp_s_fu_152_p2();
    void thread_train_inst_V_cast_fu_158_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
