// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut_update_knn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut_update_knn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut_update_knn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> dut_update_knn::ap_ST_st1_fsm_0 = "1";
const sc_lv<5> dut_update_knn::ap_ST_st2_fsm_1 = "10";
const sc_lv<5> dut_update_knn::ap_ST_st3_fsm_2 = "100";
const sc_lv<5> dut_update_knn::ap_ST_st4_fsm_3 = "1000";
const sc_lv<5> dut_update_knn::ap_ST_st5_fsm_4 = "10000";
const sc_lv<32> dut_update_knn::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut_update_knn::ap_const_lv1_1 = "1";
const sc_lv<32> dut_update_knn::ap_const_lv32_1 = "1";
const sc_lv<1> dut_update_knn::ap_const_lv1_0 = "0";
const sc_lv<32> dut_update_knn::ap_const_lv32_2 = "10";
const sc_lv<32> dut_update_knn::ap_const_lv32_3 = "11";
const sc_lv<6> dut_update_knn::ap_const_lv6_0 = "000000";
const sc_lv<32> dut_update_knn::ap_const_lv32_4 = "100";
const sc_lv<2> dut_update_knn::ap_const_lv2_0 = "00";
const sc_lv<6> dut_update_knn::ap_const_lv6_31 = "110001";
const sc_lv<6> dut_update_knn::ap_const_lv6_1 = "1";
const sc_lv<32> dut_update_knn::ap_const_lv32_30 = "110000";
const sc_lv<2> dut_update_knn::ap_const_lv2_3 = "11";
const sc_lv<2> dut_update_knn::ap_const_lv2_1 = "1";
const sc_lv<6> dut_update_knn::ap_const_lv6_32 = "110010";
const sc_lv<2> dut_update_knn::ap_const_lv2_2 = "10";

dut_update_knn::dut_update_knn(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_5_reg_327 );
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( or_cond_fu_288_p2 );
    sensitive << ( demorgan_fu_277_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_5_reg_327 );
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( or_cond_fu_288_p2 );
    sensitive << ( demorgan_fu_277_p2 );

    SC_METHOD(thread_ap_sig_107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_52 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_69 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_84 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_107 );

    SC_METHOD(thread_demorgan_fu_277_p2);
    sensitive << ( tmp_4_reg_352 );
    sensitive << ( slt_fu_271_p2 );

    SC_METHOD(thread_dist_0_s_fu_190_p3);
    sensitive << ( val_assign_reg_105 );
    sensitive << ( r_V_fu_180_p1 );
    sensitive << ( dist_fu_184_p2 );

    SC_METHOD(thread_dist_fu_184_p2);
    sensitive << ( val_assign_reg_105 );

    SC_METHOD(thread_exitcond_fu_168_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_117 );

    SC_METHOD(thread_i_1_fu_174_p2);
    sensitive << ( i_reg_117 );

    SC_METHOD(thread_i_2_fu_218_p2);
    sensitive << ( i1_reg_128 );

    SC_METHOD(thread_min_distances_V_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( min_distances_V_addr_reg_337 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_13_cast_fu_233_p1 );
    sensitive << ( tmp_14_cast_fu_256_p1 );

    SC_METHOD(thread_min_distances_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_min_distances_V_d0);
    sensitive << ( val_assign_reg_105 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_min_distances_V_we0);
    sensitive << ( tmp_5_reg_327 );
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( or_cond_fu_288_p2 );
    sensitive << ( demorgan_fu_277_p2 );

    SC_METHOD(thread_or_cond_fu_288_p2);
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( tmp_1_fu_282_p2 );

    SC_METHOD(thread_r_V_2_fu_162_p2);
    sensitive << ( test_inst_V );
    sensitive << ( train_inst_V_cast_fu_158_p1 );

    SC_METHOD(thread_r_V_3_fu_198_p4);
    sensitive << ( p_s_reg_96 );

    SC_METHOD(thread_r_V_4_fu_208_p1);
    sensitive << ( r_V_3_fu_198_p4 );

    SC_METHOD(thread_r_V_fu_180_p1);
    sensitive << ( p_s_reg_96 );

    SC_METHOD(thread_slt_fu_271_p2);
    sensitive << ( tmp_5_reg_327 );
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( val_assign_reg_105 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_2_fu_267_p1 );

    SC_METHOD(thread_tmp_13_cast_fu_233_p1);
    sensitive << ( tmp_3_fu_228_p2 );

    SC_METHOD(thread_tmp_14_cast_fu_256_p1);
    sensitive << ( tmp_6_fu_251_p2 );

    SC_METHOD(thread_tmp_1_fu_282_p2);
    sensitive << ( tmp_5_reg_327 );
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( i1_reg_128 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( demorgan_fu_277_p2 );

    SC_METHOD(thread_tmp_2_fu_267_p1);
    sensitive << ( min_distances_V_q0 );

    SC_METHOD(thread_tmp_34_cast_cast_fu_140_p1);
    sensitive << ( tmp_34 );

    SC_METHOD(thread_tmp_3_fu_228_p2);
    sensitive << ( tmp_s_reg_298 );
    sensitive << ( tmp_6_cast_fu_224_p1 );

    SC_METHOD(thread_tmp_4_fu_261_p2);
    sensitive << ( min_distances_V_q0 );
    sensitive << ( tmp_8_fu_242_p2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_tmp_5_fu_212_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( i1_reg_128 );

    SC_METHOD(thread_tmp_6_cast_fu_224_p1);
    sensitive << ( i1_reg_128 );

    SC_METHOD(thread_tmp_6_fu_251_p2);
    sensitive << ( tmp_s_reg_298 );
    sensitive << ( tmp_cast_fu_248_p1 );

    SC_METHOD(thread_tmp_7_fu_238_p1);
    sensitive << ( min_distances_V_q0 );

    SC_METHOD(thread_tmp_8_fu_242_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( val_assign_reg_105 );
    sensitive << ( tmp_7_fu_238_p1 );

    SC_METHOD(thread_tmp_cast_fu_248_p1);
    sensitive << ( i_2_reg_331 );

    SC_METHOD(thread_tmp_fu_144_p3);
    sensitive << ( tmp_34 );

    SC_METHOD(thread_tmp_s_fu_152_p2);
    sensitive << ( tmp_fu_144_p3 );
    sensitive << ( tmp_34_cast_cast_fu_140_p1 );

    SC_METHOD(thread_train_inst_V_cast_fu_158_p1);
    sensitive << ( train_inst_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_168_p2 );
    sensitive << ( tmp_5_fu_212_p2 );
    sensitive << ( tmp_5_reg_327 );
    sensitive << ( tmp_8_reg_342 );
    sensitive << ( or_cond_fu_288_p2 );
    sensitive << ( demorgan_fu_277_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_update_knn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, test_inst_V, "(port)test_inst_V");
    sc_trace(mVcdFile, train_inst_V, "(port)train_inst_V");
    sc_trace(mVcdFile, min_distances_V_address0, "(port)min_distances_V_address0");
    sc_trace(mVcdFile, min_distances_V_ce0, "(port)min_distances_V_ce0");
    sc_trace(mVcdFile, min_distances_V_we0, "(port)min_distances_V_we0");
    sc_trace(mVcdFile, min_distances_V_d0, "(port)min_distances_V_d0");
    sc_trace(mVcdFile, min_distances_V_q0, "(port)min_distances_V_q0");
    sc_trace(mVcdFile, tmp_34, "(port)tmp_34");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_22, "ap_sig_22");
    sc_trace(mVcdFile, tmp_s_fu_152_p2, "tmp_s_fu_152_p2");
    sc_trace(mVcdFile, tmp_s_reg_298, "tmp_s_reg_298");
    sc_trace(mVcdFile, r_V_2_fu_162_p2, "r_V_2_fu_162_p2");
    sc_trace(mVcdFile, i_1_fu_174_p2, "i_1_fu_174_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_52, "ap_sig_52");
    sc_trace(mVcdFile, dist_0_s_fu_190_p3, "dist_0_s_fu_190_p3");
    sc_trace(mVcdFile, exitcond_fu_168_p2, "exitcond_fu_168_p2");
    sc_trace(mVcdFile, r_V_4_fu_208_p1, "r_V_4_fu_208_p1");
    sc_trace(mVcdFile, tmp_5_fu_212_p2, "tmp_5_fu_212_p2");
    sc_trace(mVcdFile, tmp_5_reg_327, "tmp_5_reg_327");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_69, "ap_sig_69");
    sc_trace(mVcdFile, i_2_fu_218_p2, "i_2_fu_218_p2");
    sc_trace(mVcdFile, i_2_reg_331, "i_2_reg_331");
    sc_trace(mVcdFile, min_distances_V_addr_reg_337, "min_distances_V_addr_reg_337");
    sc_trace(mVcdFile, tmp_8_fu_242_p2, "tmp_8_fu_242_p2");
    sc_trace(mVcdFile, tmp_8_reg_342, "tmp_8_reg_342");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_84, "ap_sig_84");
    sc_trace(mVcdFile, tmp_4_fu_261_p2, "tmp_4_fu_261_p2");
    sc_trace(mVcdFile, tmp_4_reg_352, "tmp_4_reg_352");
    sc_trace(mVcdFile, p_s_reg_96, "p_s_reg_96");
    sc_trace(mVcdFile, val_assign_reg_105, "val_assign_reg_105");
    sc_trace(mVcdFile, i_reg_117, "i_reg_117");
    sc_trace(mVcdFile, i1_reg_128, "i1_reg_128");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_107, "ap_sig_107");
    sc_trace(mVcdFile, or_cond_fu_288_p2, "or_cond_fu_288_p2");
    sc_trace(mVcdFile, demorgan_fu_277_p2, "demorgan_fu_277_p2");
    sc_trace(mVcdFile, tmp_13_cast_fu_233_p1, "tmp_13_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_256_p1, "tmp_14_cast_fu_256_p1");
    sc_trace(mVcdFile, tmp_fu_144_p3, "tmp_fu_144_p3");
    sc_trace(mVcdFile, tmp_34_cast_cast_fu_140_p1, "tmp_34_cast_cast_fu_140_p1");
    sc_trace(mVcdFile, train_inst_V_cast_fu_158_p1, "train_inst_V_cast_fu_158_p1");
    sc_trace(mVcdFile, r_V_fu_180_p1, "r_V_fu_180_p1");
    sc_trace(mVcdFile, dist_fu_184_p2, "dist_fu_184_p2");
    sc_trace(mVcdFile, r_V_3_fu_198_p4, "r_V_3_fu_198_p4");
    sc_trace(mVcdFile, tmp_6_cast_fu_224_p1, "tmp_6_cast_fu_224_p1");
    sc_trace(mVcdFile, tmp_3_fu_228_p2, "tmp_3_fu_228_p2");
    sc_trace(mVcdFile, tmp_7_fu_238_p1, "tmp_7_fu_238_p1");
    sc_trace(mVcdFile, tmp_cast_fu_248_p1, "tmp_cast_fu_248_p1");
    sc_trace(mVcdFile, tmp_6_fu_251_p2, "tmp_6_fu_251_p2");
    sc_trace(mVcdFile, tmp_2_fu_267_p1, "tmp_2_fu_267_p1");
    sc_trace(mVcdFile, slt_fu_271_p2, "slt_fu_271_p2");
    sc_trace(mVcdFile, tmp_1_fu_282_p2, "tmp_1_fu_282_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dut_update_knn::~dut_update_knn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dut_update_knn::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_168_p2.read(), ap_const_lv1_0))) {
        i1_reg_128 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_288_p2.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_342.read())) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_288_p2.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) && 
                  !esl_seteq<1,1,1>(ap_const_lv1_0, demorgan_fu_277_p2.read()))))) {
        i1_reg_128 = i_2_reg_331.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_168_p2.read(), ap_const_lv1_0))) {
        i_reg_117 = i_1_fu_174_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_117 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_168_p2.read(), ap_const_lv1_0))) {
        p_s_reg_96 = r_V_4_fu_208_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        p_s_reg_96 = r_V_2_fu_162_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_168_p2.read(), ap_const_lv1_0))) {
        val_assign_reg_105 = dist_0_s_fu_190_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        val_assign_reg_105 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        i_2_reg_331 = i_2_fu_218_p2.read();
        tmp_5_reg_327 = tmp_5_fu_212_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_212_p2.read()))) {
        min_distances_V_addr_reg_337 =  (sc_lv<5>) (tmp_13_cast_fu_233_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_242_p2.read()))) {
        tmp_4_reg_352 = tmp_4_fu_261_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        tmp_8_reg_342 = tmp_8_fu_242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_s_reg_298 = tmp_s_fu_152_p2.read();
    }
}

void dut_update_knn::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_288_p2.read()) || 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, demorgan_fu_277_p2.read()) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_342.read())))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
         (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_288_p2.read()) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, demorgan_fu_277_p2.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_342.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_107() {
    ap_sig_107 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void dut_update_knn::thread_ap_sig_22() {
    ap_sig_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut_update_knn::thread_ap_sig_52() {
    ap_sig_52 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut_update_knn::thread_ap_sig_69() {
    ap_sig_69 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut_update_knn::thread_ap_sig_84() {
    ap_sig_84 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut_update_knn::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_52.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_69.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_84.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_107.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_demorgan_fu_277_p2() {
    demorgan_fu_277_p2 = (slt_fu_271_p2.read() & tmp_4_reg_352.read());
}

void dut_update_knn::thread_dist_0_s_fu_190_p3() {
    dist_0_s_fu_190_p3 = (!r_V_fu_180_p1.read()[0].is_01())? sc_lv<32>(): ((r_V_fu_180_p1.read()[0].to_bool())? dist_fu_184_p2.read(): val_assign_reg_105.read());
}

void dut_update_knn::thread_dist_fu_184_p2() {
    dist_fu_184_p2 = (!ap_const_lv32_1.is_01() || !val_assign_reg_105.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(val_assign_reg_105.read()));
}

void dut_update_knn::thread_exitcond_fu_168_p2() {
    exitcond_fu_168_p2 = (!i_reg_117.read().is_01() || !ap_const_lv6_31.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_117.read() == ap_const_lv6_31);
}

void dut_update_knn::thread_i_1_fu_174_p2() {
    i_1_fu_174_p2 = (!i_reg_117.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_117.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dut_update_knn::thread_i_2_fu_218_p2() {
    i_2_fu_218_p2 = (!i1_reg_128.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_128.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dut_update_knn::thread_min_distances_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        min_distances_V_address0 = min_distances_V_addr_reg_337.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        min_distances_V_address0 =  (sc_lv<5>) (tmp_14_cast_fu_256_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        min_distances_V_address0 =  (sc_lv<5>) (tmp_13_cast_fu_233_p1.read());
    } else {
        min_distances_V_address0 = "XXXXX";
    }
}

void dut_update_knn::thread_min_distances_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        min_distances_V_ce0 = ap_const_logic_1;
    } else {
        min_distances_V_ce0 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_min_distances_V_d0() {
    min_distances_V_d0 = val_assign_reg_105.read().range(6-1, 0);
}

void dut_update_knn::thread_min_distances_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_288_p2.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, demorgan_fu_277_p2.read()) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_342.read())))))) {
        min_distances_V_we0 = ap_const_logic_1;
    } else {
        min_distances_V_we0 = ap_const_logic_0;
    }
}

void dut_update_knn::thread_or_cond_fu_288_p2() {
    or_cond_fu_288_p2 = (tmp_8_reg_342.read() & tmp_1_fu_282_p2.read());
}

void dut_update_knn::thread_r_V_2_fu_162_p2() {
    r_V_2_fu_162_p2 = (train_inst_V_cast_fu_158_p1.read() ^ test_inst_V.read());
}

void dut_update_knn::thread_r_V_3_fu_198_p4() {
    r_V_3_fu_198_p4 = p_s_reg_96.read().range(48, 1);
}

void dut_update_knn::thread_r_V_4_fu_208_p1() {
    r_V_4_fu_208_p1 = esl_zext<49,48>(r_V_3_fu_198_p4.read());
}

void dut_update_knn::thread_r_V_fu_180_p1() {
    r_V_fu_180_p1 = p_s_reg_96.read().range(1-1, 0);
}

void dut_update_knn::thread_slt_fu_271_p2() {
    slt_fu_271_p2 = (!val_assign_reg_105.read().is_01() || !tmp_2_fu_267_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(val_assign_reg_105.read()) < sc_bigint<32>(tmp_2_fu_267_p1.read()));
}

void dut_update_knn::thread_tmp_13_cast_fu_233_p1() {
    tmp_13_cast_fu_233_p1 = esl_sext<64,6>(tmp_3_fu_228_p2.read());
}

void dut_update_knn::thread_tmp_14_cast_fu_256_p1() {
    tmp_14_cast_fu_256_p1 = esl_sext<64,6>(tmp_6_fu_251_p2.read());
}

void dut_update_knn::thread_tmp_1_fu_282_p2() {
    tmp_1_fu_282_p2 = (!i1_reg_128.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_128.read() == ap_const_lv2_2);
}

void dut_update_knn::thread_tmp_2_fu_267_p1() {
    tmp_2_fu_267_p1 = esl_zext<32,6>(min_distances_V_q0.read());
}

void dut_update_knn::thread_tmp_34_cast_cast_fu_140_p1() {
    tmp_34_cast_cast_fu_140_p1 = esl_zext<6,4>(tmp_34.read());
}

void dut_update_knn::thread_tmp_3_fu_228_p2() {
    tmp_3_fu_228_p2 = (!tmp_s_reg_298.read().is_01() || !tmp_6_cast_fu_224_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_s_reg_298.read()) + sc_biguint<6>(tmp_6_cast_fu_224_p1.read()));
}

void dut_update_knn::thread_tmp_4_fu_261_p2() {
    tmp_4_fu_261_p2 = (!min_distances_V_q0.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(min_distances_V_q0.read() != ap_const_lv6_32);
}

void dut_update_knn::thread_tmp_5_fu_212_p2() {
    tmp_5_fu_212_p2 = (!i1_reg_128.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_128.read() == ap_const_lv2_3);
}

void dut_update_knn::thread_tmp_6_cast_fu_224_p1() {
    tmp_6_cast_fu_224_p1 = esl_zext<6,2>(i1_reg_128.read());
}

void dut_update_knn::thread_tmp_6_fu_251_p2() {
    tmp_6_fu_251_p2 = (!tmp_s_reg_298.read().is_01() || !tmp_cast_fu_248_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_s_reg_298.read()) + sc_biguint<6>(tmp_cast_fu_248_p1.read()));
}

void dut_update_knn::thread_tmp_7_fu_238_p1() {
    tmp_7_fu_238_p1 = esl_zext<32,6>(min_distances_V_q0.read());
}

void dut_update_knn::thread_tmp_8_fu_242_p2() {
    tmp_8_fu_242_p2 = (!val_assign_reg_105.read().is_01() || !tmp_7_fu_238_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(val_assign_reg_105.read()) < sc_bigint<32>(tmp_7_fu_238_p1.read()));
}

void dut_update_knn::thread_tmp_cast_fu_248_p1() {
    tmp_cast_fu_248_p1 = esl_zext<6,2>(i_2_reg_331.read());
}

void dut_update_knn::thread_tmp_fu_144_p3() {
    tmp_fu_144_p3 = esl_concat<4,2>(tmp_34.read(), ap_const_lv2_0);
}

void dut_update_knn::thread_tmp_s_fu_152_p2() {
    tmp_s_fu_152_p2 = (!tmp_fu_144_p3.read().is_01() || !tmp_34_cast_cast_fu_140_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_fu_144_p3.read()) - sc_biguint<6>(tmp_34_cast_cast_fu_140_p1.read()));
}

void dut_update_knn::thread_train_inst_V_cast_fu_158_p1() {
    train_inst_V_cast_fu_158_p1 = esl_zext<49,48>(train_inst_V.read());
}

void dut_update_knn::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond_fu_168_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_212_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            if ((!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_288_p2.read()) || !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_327.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, demorgan_fu_277_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_342.read())))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

