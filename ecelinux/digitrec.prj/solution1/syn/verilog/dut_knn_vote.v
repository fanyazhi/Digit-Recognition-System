// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_knn_vote (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        knn_set_V_address0,
        knn_set_V_ce0,
        knn_set_V_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 11'b1;
parameter    ap_ST_st2_fsm_1 = 11'b10;
parameter    ap_ST_st3_fsm_2 = 11'b100;
parameter    ap_ST_st4_fsm_3 = 11'b1000;
parameter    ap_ST_st5_fsm_4 = 11'b10000;
parameter    ap_ST_st6_fsm_5 = 11'b100000;
parameter    ap_ST_st7_fsm_6 = 11'b1000000;
parameter    ap_ST_st8_fsm_7 = 11'b10000000;
parameter    ap_ST_st9_fsm_8 = 11'b100000000;
parameter    ap_ST_st10_fsm_9 = 11'b1000000000;
parameter    ap_ST_st11_fsm_10 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv6_32 = 6'b110010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv2_2 = 2'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] knn_set_V_address0;
output   knn_set_V_ce0;
input  [5:0] knn_set_V_q0;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg knn_set_V_ce0;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_28;
wire   [1:0] k_1_fu_308_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_47;
wire   [3:0] i_3_fu_402_p2;
reg   [3:0] i_3_reg_966;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_56;
wire   [5:0] tmp_8_fu_420_p2;
reg   [5:0] tmp_8_reg_971;
wire   [0:0] exitcond2_fu_396_p2;
wire   [1:0] j_1_fu_432_p2;
reg   [1:0] j_1_reg_979;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_71;
reg   [4:0] knn_set_V_addr_reg_984;
wire   [0:0] exitcond4_fu_426_p2;
wire   [1:0] k_2_fu_458_p2;
reg   [1:0] k_2_reg_992;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_85;
wire   [3:0] i_fu_708_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_94;
wire   [1:0] i_4_fu_725_p2;
reg   [1:0] i_4_reg_1008;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_103;
reg   [3:0] votes_V_addr_1_reg_1013;
wire   [0:0] exitcond5_fu_719_p2;
wire   [5:0] min_voter_V_s_fu_770_p3;
reg   [5:0] min_voter_V_s_reg_1018;
wire   [5:0] p_1_14_fu_778_p3;
reg   [5:0] p_1_14_reg_1023;
wire   [6:0] tmp_15_cast_fu_786_p1;
reg   [6:0] tmp_15_cast_reg_1028;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_125;
wire   [0:0] exitcond_fu_797_p2;
wire   [0:0] tmp_22_fu_817_p2;
reg   [0:0] tmp_22_reg_1046;
wire   [3:0] result_V_2_fu_868_p3;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_141;
wire   [3:0] result_V_4_fu_884_p3;
wire   [3:0] i_V_fu_892_p2;
reg   [3:0] votes_V_address0;
reg    votes_V_ce0;
reg    votes_V_we0;
reg   [3:0] votes_V_d0;
wire   [3:0] votes_V_q0;
wire   [3:0] votes_V_address1;
reg    votes_V_ce1;
wire   [3:0] votes_V_q1;
reg   [1:0] k_reg_149;
wire   [0:0] exitcond1_fu_302_p2;
reg   [3:0] voters_1_V_reg_160;
reg   [1:0] j_reg_172;
wire   [0:0] exitcond6_fu_452_p2;
reg   [1:0] k2_reg_183;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_189;
reg   [3:0] i4_reg_195;
wire   [0:0] exitcond3_fu_702_p2;
reg   [5:0] p_s_reg_206;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_205;
reg   [5:0] p_1_reg_217;
reg   [1:0] i5_reg_228;
reg   [3:0] agg_result_V_reg_239;
reg   [3:0] agg_result_V_load_reg_251;
reg   [3:0] result_V_reg_263;
wire  signed [63:0] tmp_29_cast_fu_447_p1;
wire   [63:0] tmp_9_fu_714_p1;
wire   [63:0] tmp_10_fu_743_p1;
wire   [63:0] tmp_15_fu_803_p1;
wire   [63:0] tmp_16_fu_808_p1;
reg   [5:0] min_distances_0_V_fu_62;
wire   [5:0] min_distances_0_V_1_fu_358_p3;
reg   [5:0] min_distances_1_V_fu_66;
wire   [5:0] min_distances_1_V_1_fu_350_p3;
reg   [5:0] min_distances_2_V_fu_70;
wire   [5:0] min_distances_2_V_1_fu_334_p3;
reg   [5:0] min_distances_2_V_3_fu_78;
wire   [5:0] min_distances_2_V_13_fu_664_p3;
reg   [5:0] min_distances_2_V_4_fu_82;
wire   [5:0] min_distances_2_V_12_fu_656_p3;
reg   [5:0] min_distances_2_V_2_fu_86;
wire   [5:0] min_distances_2_V_6_fu_648_p3;
reg   [3:0] voters_2_V_1_fu_90;
wire   [3:0] voters_2_V_12_fu_640_p3;
reg   [3:0] voters_2_V_2_fu_94;
wire   [3:0] voters_2_V_9_fu_632_p3;
reg   [3:0] voters_2_V_7_fu_98;
wire   [3:0] voters_2_V_4_fu_624_p3;
wire   [3:0] tmp_11_fu_790_p2;
wire   [0:0] sel_tmp_fu_314_p2;
wire   [0:0] sel_tmp6_fu_328_p2;
wire   [5:0] sel_tmp5_fu_320_p3;
wire   [5:0] sel_tmp9_fu_342_p3;
wire   [5:0] tmp_7_fu_412_p3;
wire   [5:0] tmp_cast_fu_408_p1;
wire   [5:0] tmp_14_cast_fu_438_p1;
wire   [5:0] tmp_14_fu_442_p2;
wire   [5:0] tmp_3_fu_464_p5;
wire   [0:0] cond_fu_482_p2;
wire   [5:0] min_distances_V_load_phi_fu_488_p3;
wire   [0:0] ult_fu_496_p2;
wire   [0:0] sel_tmp1_fu_520_p2;
wire   [3:0] voters_2_V_fu_526_p3;
wire   [3:0] voters_2_V_5_fu_542_p3;
wire   [5:0] min_distances_2_V_8_fu_566_p3;
wire   [5:0] min_distances_2_V_9_fu_582_p3;
wire   [0:0] tmp_20_fu_508_p2;
wire   [0:0] tmp_21_fu_514_p2;
wire   [0:0] tmp_fu_606_p2;
wire   [0:0] rev_fu_502_p2;
wire   [0:0] tmp_18_fu_476_p2;
wire   [0:0] or_cond_fu_612_p2;
wire   [0:0] sel_tmp8_fu_618_p2;
wire   [3:0] voters_2_V_3_fu_534_p3;
wire   [3:0] voters_2_V_6_fu_550_p3;
wire   [3:0] voters_2_V_8_fu_558_p3;
wire   [5:0] min_distances_2_V_5_fu_574_p3;
wire   [5:0] min_distances_2_V_7_fu_590_p3;
wire   [5:0] min_distances_2_V_11_fu_598_p3;
wire   [3:0] tmp_1_fu_731_p5;
wire   [5:0] min_dist_V_fu_748_p5;
wire   [0:0] tmp_12_fu_760_p2;
wire   [5:0] min_voter_V_fu_766_p1;
wire   [6:0] tmp_30_cast_fu_813_p1;
wire   [0:0] tmp_17_fu_822_p2;
wire   [0:0] tmp_19_fu_828_p2;
wire   [0:0] sel_tmp2_fu_856_p2;
wire   [0:0] sel_tmp3_fu_862_p2;
wire   [3:0] p_2_agg_result_V_fu_834_p3;
wire   [3:0] result_V_1_fu_848_p3;
wire   [3:0] p_2_agg_result_V_load_fu_841_p3;
wire   [3:0] result_V_3_fu_876_p3;
reg   [3:0] ap_return_preg;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'b1;
#0 ap_return_preg = 4'b0000;
end

dut_knn_vote_votes_V #(
    .DataWidth( 4 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
votes_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(votes_V_address0),
    .ce0(votes_V_ce0),
    .we0(votes_V_we0),
    .d0(votes_V_d0),
    .q0(votes_V_q0),
    .address1(votes_V_address1),
    .ce1(votes_V_ce1),
    .q1(votes_V_q1)
);

dut_mux_3to1_sel2_6_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_3to1_sel2_6_1_U5(
    .din1(min_distances_2_V_3_fu_78),
    .din2(min_distances_2_V_4_fu_82),
    .din3(min_distances_2_V_2_fu_86),
    .din4(k2_reg_183),
    .dout(tmp_3_fu_464_p5)
);

dut_mux_3to1_sel2_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
dut_mux_3to1_sel2_4_1_U6(
    .din1(voters_2_V_1_fu_90),
    .din2(voters_2_V_2_fu_94),
    .din3(voters_2_V_7_fu_98),
    .din4(i5_reg_228),
    .dout(tmp_1_fu_731_p5)
);

dut_mux_3to1_sel2_6_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_3to1_sel2_6_1_U7(
    .din1(min_distances_2_V_3_fu_78),
    .din2(min_distances_2_V_4_fu_82),
    .din3(min_distances_2_V_2_fu_86),
    .din4(i5_reg_228),
    .dout(min_dist_V_fu_748_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv4_0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond_fu_797_p2))) begin
            ap_return_preg <= agg_result_V_reg_239;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        agg_result_V_load_reg_251 <= result_V_4_fu_884_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond5_fu_719_p2))) begin
        agg_result_V_load_reg_251 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        agg_result_V_reg_239 <= result_V_2_fu_868_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond5_fu_719_p2))) begin
        agg_result_V_reg_239 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(exitcond2_fu_396_p2 == 1'b0))) begin
        i4_reg_195 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond3_fu_702_p2))) begin
        i4_reg_195 <= i_fu_708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_702_p2))) begin
        i5_reg_228 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        i5_reg_228 <= i_4_reg_1008;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond6_fu_452_p2))) begin
        j_reg_172 <= j_1_reg_979;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond2_fu_396_p2 == 1'b0))) begin
        j_reg_172 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        k2_reg_183 <= k_2_reg_992;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond4_fu_426_p2))) begin
        k2_reg_183 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_302_p2))) begin
        k_reg_149 <= k_1_fu_308_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        k_reg_149 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        min_distances_2_V_2_fu_86 <= min_distances_2_V_6_fu_648_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_302_p2))) begin
        min_distances_2_V_2_fu_86 <= min_distances_2_V_fu_70;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        min_distances_2_V_3_fu_78 <= min_distances_2_V_13_fu_664_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_302_p2))) begin
        min_distances_2_V_3_fu_78 <= min_distances_0_V_fu_62;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        min_distances_2_V_4_fu_82 <= min_distances_2_V_12_fu_656_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_302_p2))) begin
        min_distances_2_V_4_fu_82 <= min_distances_1_V_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_702_p2))) begin
        p_1_reg_217 <= ap_const_lv6_32;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        p_1_reg_217 <= p_1_14_reg_1023;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond3_fu_702_p2))) begin
        p_s_reg_206 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        p_s_reg_206 <= min_voter_V_s_reg_1018;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        result_V_reg_263 <= i_V_fu_892_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond5_fu_719_p2))) begin
        result_V_reg_263 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_302_p2))) begin
        voters_1_V_reg_160 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_426_p2))) begin
        voters_1_V_reg_160 <= i_3_reg_966;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_3_reg_966 <= i_3_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        i_4_reg_1008 <= i_4_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_979 <= j_1_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        k_2_reg_992 <= k_2_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond4_fu_426_p2))) begin
        knn_set_V_addr_reg_984 <= tmp_29_cast_fu_447_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_302_p2))) begin
        min_distances_0_V_fu_62 <= min_distances_0_V_1_fu_358_p3;
        min_distances_1_V_fu_66 <= min_distances_1_V_1_fu_350_p3;
        min_distances_2_V_fu_70 <= min_distances_2_V_1_fu_334_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & (1'b0 == exitcond5_fu_719_p2))) begin
        min_voter_V_s_reg_1018 <= min_voter_V_s_fu_770_p3;
        p_1_14_reg_1023 <= p_1_14_fu_778_p3;
        votes_V_addr_1_reg_1013 <= tmp_10_fu_743_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond5_fu_719_p2))) begin
        tmp_15_cast_reg_1028[5 : 0] <= tmp_15_cast_fu_786_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == exitcond_fu_797_p2))) begin
        tmp_22_reg_1046 <= tmp_22_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond2_fu_396_p2 == 1'b0))) begin
        tmp_8_reg_971 <= tmp_8_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        voters_2_V_1_fu_90 <= voters_2_V_12_fu_640_p3;
        voters_2_V_2_fu_94 <= voters_2_V_9_fu_632_p3;
        voters_2_V_7_fu_98 <= voters_2_V_4_fu_624_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond_fu_797_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond_fu_797_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond_fu_797_p2))) begin
        ap_return = agg_result_V_reg_239;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_125) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_141) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_28) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_47) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_56) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_71) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_85) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_189) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_94) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_103) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_205) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        knn_set_V_ce0 = 1'b1;
    end else begin
        knn_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        votes_V_address0 = votes_V_addr_1_reg_1013;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        votes_V_address0 = tmp_9_fu_714_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        votes_V_address0 = tmp_15_fu_803_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        votes_V_address0 = tmp_10_fu_743_p1;
    end else begin
        votes_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        votes_V_ce0 = 1'b1;
    end else begin
        votes_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        votes_V_ce1 = 1'b1;
    end else begin
        votes_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        votes_V_d0 = tmp_11_fu_790_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        votes_V_d0 = ap_const_lv4_0;
    end else begin
        votes_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond3_fu_702_p2)) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        votes_V_we0 = 1'b1;
    end else begin
        votes_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond1_fu_302_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((exitcond2_fu_396_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond4_fu_426_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond6_fu_452_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st7_fsm_6 : begin
            if ((1'b0 == exitcond3_fu_702_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            if (~(1'b0 == exitcond5_fu_719_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st10_fsm_9 : begin
            if (~(1'b0 == exitcond_fu_797_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_103 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_125 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_141 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_189 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_205 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_28 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_47 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_56 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_71 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_85 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_94 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

assign cond_fu_482_p2 = ((k2_reg_183 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign exitcond1_fu_302_p2 = ((k_reg_149 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond2_fu_396_p2 = ((voters_1_V_reg_160 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond3_fu_702_p2 = ((i4_reg_195 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond4_fu_426_p2 = ((j_reg_172 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond5_fu_719_p2 = ((i5_reg_228 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond6_fu_452_p2 = ((k2_reg_183 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_fu_797_p2 = ((result_V_reg_263 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign i_3_fu_402_p2 = (voters_1_V_reg_160 + ap_const_lv4_1);

assign i_4_fu_725_p2 = (i5_reg_228 + ap_const_lv2_1);

assign i_V_fu_892_p2 = (result_V_reg_263 + ap_const_lv4_1);

assign i_fu_708_p2 = (i4_reg_195 + ap_const_lv4_1);

assign j_1_fu_432_p2 = (j_reg_172 + ap_const_lv2_1);

assign k_1_fu_308_p2 = (k_reg_149 + ap_const_lv2_1);

assign k_2_fu_458_p2 = (k2_reg_183 + ap_const_lv2_1);

assign knn_set_V_address0 = knn_set_V_addr_reg_984;

assign min_distances_0_V_1_fu_358_p3 = ((sel_tmp6_fu_328_p2[0:0] === 1'b1) ? ap_const_lv6_32 : min_distances_0_V_fu_62);

assign min_distances_1_V_1_fu_350_p3 = ((sel_tmp6_fu_328_p2[0:0] === 1'b1) ? min_distances_1_V_fu_66 : sel_tmp9_fu_342_p3);

assign min_distances_2_V_11_fu_598_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? knn_set_V_q0 : min_distances_2_V_3_fu_78);

assign min_distances_2_V_12_fu_656_p3 = ((sel_tmp8_fu_618_p2[0:0] === 1'b1) ? min_distances_2_V_7_fu_590_p3 : min_distances_2_V_4_fu_82);

assign min_distances_2_V_13_fu_664_p3 = ((sel_tmp8_fu_618_p2[0:0] === 1'b1) ? min_distances_2_V_11_fu_598_p3 : min_distances_2_V_3_fu_78);

assign min_distances_2_V_1_fu_334_p3 = ((sel_tmp6_fu_328_p2[0:0] === 1'b1) ? min_distances_2_V_fu_70 : sel_tmp5_fu_320_p3);

assign min_distances_2_V_5_fu_574_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? min_distances_2_V_2_fu_86 : min_distances_2_V_8_fu_566_p3);

assign min_distances_2_V_6_fu_648_p3 = ((sel_tmp8_fu_618_p2[0:0] === 1'b1) ? min_distances_2_V_5_fu_574_p3 : min_distances_2_V_2_fu_86);

assign min_distances_2_V_7_fu_590_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? min_distances_2_V_4_fu_82 : min_distances_2_V_9_fu_582_p3);

assign min_distances_2_V_8_fu_566_p3 = ((sel_tmp1_fu_520_p2[0:0] === 1'b1) ? min_distances_2_V_2_fu_86 : knn_set_V_q0);

assign min_distances_2_V_9_fu_582_p3 = ((sel_tmp1_fu_520_p2[0:0] === 1'b1) ? knn_set_V_q0 : min_distances_2_V_4_fu_82);

assign min_distances_V_load_phi_fu_488_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? min_distances_2_V_4_fu_82 : min_distances_2_V_2_fu_86);

assign min_voter_V_fu_766_p1 = tmp_1_fu_731_p5;

assign min_voter_V_s_fu_770_p3 = ((tmp_12_fu_760_p2[0:0] === 1'b1) ? min_voter_V_fu_766_p1 : p_s_reg_206);

assign or_cond_fu_612_p2 = (tmp_fu_606_p2 | rev_fu_502_p2);

assign p_1_14_fu_778_p3 = ((tmp_12_fu_760_p2[0:0] === 1'b1) ? min_dist_V_fu_748_p5 : p_1_reg_217);

assign p_2_agg_result_V_fu_834_p3 = ((tmp_22_reg_1046[0:0] === 1'b1) ? result_V_reg_263 : agg_result_V_reg_239);

assign p_2_agg_result_V_load_fu_841_p3 = ((tmp_22_reg_1046[0:0] === 1'b1) ? result_V_reg_263 : agg_result_V_load_reg_251);

assign result_V_1_fu_848_p3 = ((tmp_17_fu_822_p2[0:0] === 1'b1) ? result_V_reg_263 : agg_result_V_reg_239);

assign result_V_2_fu_868_p3 = ((sel_tmp3_fu_862_p2[0:0] === 1'b1) ? p_2_agg_result_V_fu_834_p3 : result_V_1_fu_848_p3);

assign result_V_3_fu_876_p3 = ((tmp_17_fu_822_p2[0:0] === 1'b1) ? result_V_reg_263 : agg_result_V_load_reg_251);

assign result_V_4_fu_884_p3 = ((sel_tmp3_fu_862_p2[0:0] === 1'b1) ? p_2_agg_result_V_load_fu_841_p3 : result_V_3_fu_876_p3);

assign rev_fu_502_p2 = (ult_fu_496_p2 ^ 1'b1);

assign sel_tmp1_fu_520_p2 = ((k2_reg_183 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_856_p2 = (tmp_17_fu_822_p2 ^ 1'b1);

assign sel_tmp3_fu_862_p2 = (tmp_19_fu_828_p2 & sel_tmp2_fu_856_p2);

assign sel_tmp5_fu_320_p3 = ((sel_tmp_fu_314_p2[0:0] === 1'b1) ? min_distances_2_V_fu_70 : ap_const_lv6_32);

assign sel_tmp6_fu_328_p2 = ((k_reg_149 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_618_p2 = (tmp_18_fu_476_p2 & or_cond_fu_612_p2);

assign sel_tmp9_fu_342_p3 = ((sel_tmp_fu_314_p2[0:0] === 1'b1) ? ap_const_lv6_32 : min_distances_1_V_fu_66);

assign sel_tmp_fu_314_p2 = ((k_reg_149 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_10_fu_743_p1 = tmp_1_fu_731_p5;

assign tmp_11_fu_790_p2 = (votes_V_q0 + ap_const_lv4_1);

assign tmp_12_fu_760_p2 = ((min_dist_V_fu_748_p5 < p_1_reg_217) ? 1'b1 : 1'b0);

assign tmp_14_cast_fu_438_p1 = j_reg_172;

assign tmp_14_fu_442_p2 = (tmp_8_reg_971 + tmp_14_cast_fu_438_p1);

assign tmp_15_cast_fu_786_p1 = p_s_reg_206;

assign tmp_15_fu_803_p1 = result_V_reg_263;

assign tmp_16_fu_808_p1 = agg_result_V_load_reg_251;

assign tmp_17_fu_822_p2 = ((votes_V_q0 > votes_V_q1) ? 1'b1 : 1'b0);

assign tmp_18_fu_476_p2 = ((knn_set_V_q0 < tmp_3_fu_464_p5) ? 1'b1 : 1'b0);

assign tmp_19_fu_828_p2 = ((votes_V_q0 == votes_V_q1) ? 1'b1 : 1'b0);

assign tmp_20_fu_508_p2 = ((tmp_3_fu_464_p5 == ap_const_lv6_32) ? 1'b1 : 1'b0);

assign tmp_21_fu_514_p2 = ((k2_reg_183 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp_22_fu_817_p2 = ((tmp_30_cast_fu_813_p1 == tmp_15_cast_reg_1028) ? 1'b1 : 1'b0);

assign tmp_29_cast_fu_447_p1 = $signed(tmp_14_fu_442_p2);

assign tmp_30_cast_fu_813_p1 = result_V_reg_263;

assign tmp_7_fu_412_p3 = {{voters_1_V_reg_160}, {ap_const_lv2_0}};

assign tmp_8_fu_420_p2 = (tmp_7_fu_412_p3 - tmp_cast_fu_408_p1);

assign tmp_9_fu_714_p1 = i4_reg_195;

assign tmp_cast_fu_408_p1 = voters_1_V_reg_160;

assign tmp_fu_606_p2 = (tmp_20_fu_508_p2 | tmp_21_fu_514_p2);

assign ult_fu_496_p2 = ((knn_set_V_q0 < min_distances_V_load_phi_fu_488_p3) ? 1'b1 : 1'b0);

assign voters_2_V_12_fu_640_p3 = ((sel_tmp8_fu_618_p2[0:0] === 1'b1) ? voters_2_V_8_fu_558_p3 : voters_2_V_1_fu_90);

assign voters_2_V_3_fu_534_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? voters_2_V_7_fu_98 : voters_2_V_fu_526_p3);

assign voters_2_V_4_fu_624_p3 = ((sel_tmp8_fu_618_p2[0:0] === 1'b1) ? voters_2_V_3_fu_534_p3 : voters_2_V_7_fu_98);

assign voters_2_V_5_fu_542_p3 = ((sel_tmp1_fu_520_p2[0:0] === 1'b1) ? voters_1_V_reg_160 : voters_2_V_2_fu_94);

assign voters_2_V_6_fu_550_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? voters_2_V_2_fu_94 : voters_2_V_5_fu_542_p3);

assign voters_2_V_8_fu_558_p3 = ((cond_fu_482_p2[0:0] === 1'b1) ? voters_1_V_reg_160 : voters_2_V_1_fu_90);

assign voters_2_V_9_fu_632_p3 = ((sel_tmp8_fu_618_p2[0:0] === 1'b1) ? voters_2_V_6_fu_550_p3 : voters_2_V_2_fu_94);

assign voters_2_V_fu_526_p3 = ((sel_tmp1_fu_520_p2[0:0] === 1'b1) ? voters_2_V_7_fu_98 : voters_1_V_reg_160);

assign votes_V_address1 = tmp_16_fu_808_p1;

always @ (posedge ap_clk) begin
    tmp_15_cast_reg_1028[6] <= 1'b0;
end

endmodule //dut_knn_vote
